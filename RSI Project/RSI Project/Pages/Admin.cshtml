@page
@model RSI_Project.Pages.AdminModel
@{
    ViewData["Title"] = "Admin";
}

<div class="text-center">
    <h1>@ViewData["Title"]</h1>
    <p></p>
    <div class="row">
        <h2>Employees</h2>
        <p>&nbsp;</p>
        <form>
            <input type="search" placeholder="Employee ID ex: 000000" />
            <input type="submit" value="Add Employee" />
        </form>
        <p>&nbsp;</p>
        <table id="adminEmployeeTable" class="table table-striped">
            <thead>
                <tr style="cursor: pointer">
                    <th onclick="sortTable(0)">Employee Number</th>
                    <th class="text-start" onclick="sortTable(1)">Last Name</th>
                    <th class="text-start" onclick="sortTable(2)">First Name</th>
                    <th onclick="sortTable(3)">Region</th>
                    <th onclick="sortTable(4)">Practice Area</th>
                    <th onclick="sortTable(5)">User Type</th>
                    <th class="text-start" onclick="sortTable(6)">Email</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var employee in Model.employeeList)
                {
                    <tr>
                        <td>@employee.employeeID</td>
                        <td class="text-start">@employee.lName</td>
                        <td class="text-start">@employee.fName</td>
                        <td>@employee.regionID</td>
                        <td>@employee.practiceArea</td>
                        <td>@employee.userType</td>
                        <td class="text-start">@employee.email</td>
                    </tr>
                }
            </tbody>  
        </table>
    </div>
</div>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("adminEmployeeTable");
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("td")[n];
                y = rows[i + 1].getElementsByTagName("td")[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>